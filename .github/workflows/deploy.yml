name: Deploy

on:
  push:
    branches:
      - master
      - stable
      - production

env:
  TZ: 'Asia/Tokyo'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v3.1.0
        with:
          node-version: 12

      - id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: |
          yarn setup

      - run: |
          yarn lint --format junit --output-file reports/eslint/results.xml

      - uses: actions/upload-artifact@v2
        with:
          name: lint-report
          path: reports

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v3.1.0
        with:
          node-version: 12

      - id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: |
          yarn setup

      - run: |
          yarn build

  deploy-dev:
    if: ${{ contains(github.ref, 'master') }}
    needs: [ lint, build ]
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v3.1.0
        with:
          node-version: 12

      - id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: |
          yarn setup

      - run: |
          yarn deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          SLACK_TOKENS: ${{ secrets.SLACK_TOKENS }}
          YOLP_APP_ID: ${{ secrets.YOLP_APP_ID }}
          NOTE: ${{ secrets.NOTE }}
